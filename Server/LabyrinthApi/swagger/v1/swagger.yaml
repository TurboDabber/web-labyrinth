openapi: 3.0.4
info:
  title: Labyrinth API
  version: v1
paths:
  /api/maze/mazes:
    post:
      tags:
        - Maze
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMazeCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/GenerateMazeCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GenerateMazeCommand'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    get:
      tags:
        - Maze
      parameters:
        - name: command
          in: query
          schema:
            $ref: '#/components/schemas/GetAllMazes'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maze'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maze'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Maze'
  '/api/maze/mazes/{id}':
    get:
      tags:
        - Maze
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Maze'
            application/json:
              schema:
                $ref: '#/components/schemas/Maze'
            text/json:
              schema:
                $ref: '#/components/schemas/Maze'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/maze/mazes/{id}/path':
    get:
      tags:
        - Maze
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: startX
          in: query
          schema:
            type: integer
            format: int32
        - name: startY
          in: query
          schema:
            type: integer
            format: int32
        - name: endX
          in: query
          schema:
            type: integer
            format: int32
        - name: endY
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MazePathResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/MazePathResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/MazePathResponse'
components:
  schemas:
    GenerateMazeCommand:
      type: object
      properties:
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
      additionalProperties: false
    GetAllMazes:
      type: object
      additionalProperties: false
    Maze:
      required:
        - algorithmType
        - height
        - mazeDataJson
        - width
      type: object
      properties:
        id:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        mazeDataJson:
          minLength: 1
          type: string
        mazeData:
          type: array
          items:
            type: array
            items:
              type: integer
              format: int32
          nullable: true
        algorithmType:
          $ref: '#/components/schemas/MazeAlgorithmType'
      additionalProperties: false
    MazeAlgorithmType:
      enum:
        - 0
      type: integer
      format: int32
    MazePathResponse:
      type: object
      properties:
        path:
          type: array
          items:
            $ref: '#/components/schemas/Point2D'
          nullable: true
      additionalProperties: false
    Point2D:
      type: object
      properties:
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }